{"ast":null,"code":"var _jsxFileName = \"/home/jason/sei/unit2/week6/30/weather-app/src/main-components/WeatherHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport WeatherHistoryCard from '../components/card-component/WeatherHistoryCard';\nimport { Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherHistory = () => {\n  _s();\n\n  const [weatherHistoryData, setWeatherHistoryData] = useState([]);\n  const [userLocation, setUserLocation] = useState('');\n  const apiKey = 'b739f9dce98a4420b36175641221102';\n  const baseUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${userLocation}&days=3`;\n\n  const handleChange = e => {\n    setUserLocation(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.get(baseUrl).then(info => {\n      setWeatherHistoryData(info.data.forecast.forecastday);\n      console.log(weatherHistoryData);\n    }).catch(err => {\n      console.log(\"NOOOOO!!!!\", err.message);\n    });\n  };\n\n  const forecastInfo = weatherHistoryData.map((info, index) => {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(WeatherHistoryCard, {\n          date: info.date,\n          humidity: info.day.avghumidity,\n          temp: info.day.avgtemp_f,\n          visibility: info.day.avgvis_miles,\n          condition: info.day.condition.text,\n          icon: info.day.condition.icon\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"location-input\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-search\",\n        children: \"Search by location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: forecastInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherHistory, \"bmLl9urgJShxV6Z0osxPxVLO698=\");\n\n_c = WeatherHistory;\nexport default WeatherHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherHistory\");","map":{"version":3,"sources":["/home/jason/sei/unit2/week6/30/weather-app/src/main-components/WeatherHistory.js"],"names":["React","useState","axios","WeatherHistoryCard","Row","Col","WeatherHistory","weatherHistoryData","setWeatherHistoryData","userLocation","setUserLocation","apiKey","baseUrl","handleChange","e","target","value","handleSubmit","preventDefault","get","then","info","data","forecast","forecastday","console","log","catch","err","message","forecastInfo","map","index","date","day","avghumidity","avgtemp_f","avgvis_miles","condition","text","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,YAAvB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAGA,QAAMU,MAAM,GAAG,iCAAf;AAEA,QAAMC,OAAO,GAAI,mDAAkDD,MAAO,MAAKF,YAAa,SAA5F;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAhB,IAAAA,KAAK,CACFiB,GADH,CACOP,OADP,EAEGQ,IAFH,CAESC,IAAD,IAAU;AACdb,MAAAA,qBAAqB,CAACa,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,WAApB,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYnB,kBAAZ;AACD,KALH,EAMGoB,KANH,CAMUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,GAAG,CAACC,OAA9B;AACD,KARH;AASC,GAXH;;AAcE,QAAMC,YAAY,GAAGvB,kBAAkB,CAACwB,GAAnB,CAAuB,CAACV,IAAD,EAAOW,KAAP,KAAiB;AAC3D,wBAEI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACC;AAAA,qCAAM,QAAC,kBAAD;AAAoB,UAAA,IAAI,EAAEX,IAAI,CAACY,IAA/B;AAAiD,UAAA,QAAQ,EAAEZ,IAAI,CAACa,GAAL,CAASC,WAApE;AAAiF,UAAA,IAAI,EAAEd,IAAI,CAACa,GAAL,CAASE,SAAhG;AAA2G,UAAA,UAAU,EAAEf,IAAI,CAACa,GAAL,CAASG,YAAhI;AAA8I,UAAA,SAAS,EAAEhB,IAAI,CAACa,GAAL,CAASI,SAAT,CAAmBC,IAA5K;AAAkL,UAAA,IAAI,EAAElB,IAAI,CAACa,GAAL,CAASI,SAAT,CAAmBE;AAA3M,WAA0CR,KAA1C;AAAA;AAAA;AAAA;AAAA,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQD,GAToB,CAArB;AAYF,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEf,YAAhB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAmC,QAAA,QAAQ,EAAEJ;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,QAAC,GAAD;AAAA,gBAAMiB;AAAN;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtDD;;GAAMxB,c;;KAAAA,c;AAwDN,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport WeatherHistoryCard from '../components/card-component/WeatherHistoryCard';\nimport {Row, Col} from 'reactstrap';\n\nconst WeatherHistory = () => {\n\n  const [weatherHistoryData, setWeatherHistoryData] = useState([]);\n  const [userLocation, setUserLocation] = useState('');\n  \n\n  const apiKey = 'b739f9dce98a4420b36175641221102';\n\n  const baseUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${userLocation}&days=3`;\n\n  const handleChange = (e) => {\n    setUserLocation(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .get(baseUrl)\n      .then((info) => {\n        setWeatherHistoryData(info.data.forecast.forecastday);\n        console.log(weatherHistoryData);\n      })\n      .catch((err) => {\n        console.log(\"NOOOOO!!!!\", err.message);\n      });\n    }\n    \n    \n    const forecastInfo = weatherHistoryData.map((info, index) => {\n      return ( \n        \n          <Col lg={3}>\n           <div> <WeatherHistoryCard date={info.date} key={index} humidity={info.day.avghumidity} temp={info.day.avgtemp_f} visibility={info.day.avgvis_miles} condition={info.day.condition.text} icon={info.day.condition.icon}/> </div>\n          </Col>\n        \n\n        )\n    })\n\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input className='location-input'  onChange={handleChange}/>\n        <button className='button-search'>Search by location</button>\n      </form>\n      <br/>\n      \n      <h1>Weather History</h1>\n      {/* {  weatherHistoryData === [] || weatherHistoryData === undefined ? <div></div> : forecastInfo} */}\n      <Row>{forecastInfo}</Row>\n      \n    </div>\n  )\n}\n\nexport default WeatherHistory;\n"]},"metadata":{},"sourceType":"module"}